옵티마이저(OPTIMIZER) 
- 실제 개발에는 관련없음 / SQL을 가장 빠르고 효율적으로 수행할 최적의 처리경로(최저비용)를 생성해주는 DBMS의 내부 핵심엔진.
- 사용자가 쿼리문(SQL)으로 결과를 요청하면, 이를 생성하는데 필요한 처리경로는 DBMS에 내장된 옵티마이저가 자동으로 생성한다.
- 옵티마이저가 생성한 SQL처리 경로를 실행 계획이라고 한다.

	COST: 예상수행시간 / 쿼리를 수행하는데 소요되는 일량 또는 시간, 클수록 나쁨
	CARDINALITY: 실행 결과의 건수

옵티마이저의 SQL최적화 과정
- 사용자가 작성한 쿼리 수행을 위해, 실행될 만한 실행계획을 찾는다.
- 데이터 딕셔너리에 미리 수집해 놓은 오브젝트 통계 및 시스템 통계정보를 이용해 각 실행 계획의 예상 비용을 산정한다.
- 각 실행계획을 비교해서 최저비용을 갖는 하나를 선택하여 실행한다.

옵티마이저 종류
1. 규칙기반 옵티마이저(RBO), 휴리스틱(Heuristic) 옵티마이저
	미리 정해진 규칙에 따라 실행. / oracle 10g 버전 부터 RBO에 대한 지원 중단
2. 비용기반 옵티마이저(CBO)
	비용이 가장 낮은 실행계획을 선택

PARSER ------> OPTIMIZER -------> ROW_SOURCE ----------> SQL_ENGINE
                                              GENERATOR

문법오류검사.   총 비용 계산         실행가능 코드로 변경        실행
코드로 변경       실행계획 생성

SQL실행순서
FROM > WHERE > GROUP BY > HAVING > SELECT > ORDER BY
--------------------------------------------------------------------------------------------------------------------------------
힌트(Hint)   /*+ hint*/    /*뒤에 +를 붙여야한다.
SELECT문에 실행하고 싶은 계획을 전달할 때 사용하는 문법(데이터를 가져올때 순서를 먼저 부여하여 가져올수 있게 쓸수있음)
잘못 작성되어도 실행 시 무시되며 별도의 오류는 발생하지 않는다.
/*+ 로 시작되며 */ 로 마친다. 또한 뒤에 컬럼명을 작성할때 ,를 사용하지 않는다.
+를 /*와 붙이지 않으면 실행되지 않는다.

SELECT /*+INDEX(테이블명 PK) */ 컬럼명1, 컬럼명2, ... FROM 테이블명